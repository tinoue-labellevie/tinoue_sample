{
  "version": 3,
  "sources": ["../../@neoconfetti/svelte/dist/index.js"],
  "sourcesContent": ["// ../core/dist/index.js\nvar style_module_default = '@keyframes mz3PUW_ya{to{translate:0 var(--sh)}}@keyframes mz3PUW_xa{to{translate:var(--xlp)0}}@keyframes mz3PUW_r{50%{rotate:var(--hr)180deg}to{rotate:var(--r)360deg}}.mz3PUW_c{z-index:1200;width:0;height:0;position:relative;overflow:visible}.mz3PUW_p{animation:xa var(--dc)forwards cubic-bezier(var(--x1),var(--x2),var(--x3),var(--x4));animation-name:mz3PUW_xa}.mz3PUW_p>div{animation:ya var(--dc)forwards cubic-bezier(var(--y1),var(--y2),var(--y3),var(--y4));width:var(--w);height:var(--h);animation-name:mz3PUW_ya;position:absolute;top:0;left:0}.mz3PUW_p>div:before{content:\"\";background-color:var(--bgc);animation:r var(--rd)infinite linear;border-radius:var(--br);width:100%;height:100%;animation-name:mz3PUW_r;display:block}';\nvar c = \"mz3PUW_c\";\nvar p = \"mz3PUW_p\";\nvar DEFAULT_COLORS = [\"#FFC700\", \"#FF0000\", \"#2E3191\", \"#41BBC7\"];\nvar DEFAULT_DURATION = 3500;\nvar DEFAULT_FORCE = 0.5;\nvar DEFAULT_PARTICLE_COUNT = 150;\nvar DEFAULT_PARTICLE_SHAPE = \"mix\";\nvar DEFAULT_PARTICLE_SIZE = 12;\nvar DEFAULT_PARTICLE_CLASS = \"\";\nvar DEFAULT_DESTROY_AFTER_DONE = true;\nvar DEFAULT_STAGE_HEIGHT = 800;\nvar DEFAULT_STAGE_WIDTH = 1600;\nfunction confetti(container, options = {}) {\n  let {\n    colors = DEFAULT_COLORS,\n    duration = DEFAULT_DURATION,\n    force = DEFAULT_FORCE,\n    particleCount = DEFAULT_PARTICLE_COUNT,\n    particleShape = DEFAULT_PARTICLE_SHAPE,\n    particleSize = DEFAULT_PARTICLE_SIZE,\n    particleClass = DEFAULT_PARTICLE_CLASS,\n    destroyAfterDone = DEFAULT_DESTROY_AFTER_DONE,\n    stageHeight = DEFAULT_STAGE_HEIGHT,\n    stageWidth = DEFAULT_STAGE_WIDTH\n  } = options;\n  append_styles(style_module_default);\n  container.classList.add(c);\n  container.style.setProperty(\"--sh\", stageHeight + \"px\");\n  let particles = [];\n  let nodes = [];\n  const calc_rotation_transform = () => math_round(random() * (POSSIBLE_ROTATION_TRANSFORMS - 1));\n  const get_is_circle = (particle_shape, rotation_transform) => particleShape !== \"rectangles\" && (particle_shape === \"circles\" || should_be_circle(rotation_transform));\n  function confetti_styles(node, degree) {\n    const rotation_transform = calc_rotation_transform();\n    const is_circle = get_is_circle(particleShape, rotation_transform);\n    const set_css_var = (key, val) => node.style.setProperty(key, val + \"\");\n    set_css_var(\n      // x landing point\n      \"--xlp\",\n      map_range(abs(rotate(degree, 90) - 180), 0, 180, -stageWidth / 2, stageWidth / 2) + \"px\"\n    );\n    set_css_var(\n      // duration chaos\n      \"--dc\",\n      duration - math_round(random() * 1e3) + \"ms\"\n    );\n    const x1 = random() < CRAZY_PARTICLES_FREQUENCY ? round(random() * CRAZY_PARTICLE_CRAZINESS, 2) : 0;\n    set_css_var(\"--x1\", x1);\n    set_css_var(\"--x2\", x1 * -1);\n    set_css_var(\"--x3\", x1);\n    set_css_var(\"--x4\", round(abs(map_range(abs(rotate(degree, 90) - 180), 0, 180, -1, 1)), 4));\n    set_css_var(\"--y1\", round(random() * BEZIER_MEDIAN, 4));\n    set_css_var(\"--y2\", round(random() * force * (coin_flip() ? 1 : -1), 4));\n    set_css_var(\"--y3\", BEZIER_MEDIAN);\n    set_css_var(\"--y4\", round(max(map_range(abs(degree - 180), 0, 180, force, -force), 0), 4));\n    set_css_var(\n      // --width\n      \"--w\",\n      (is_circle ? particleSize : math_round(random() * 4) + particleSize / 2) + \"px\"\n    );\n    set_css_var(\n      // --height\n      \"--h\",\n      (is_circle ? particleSize : math_round(random() * 2) + particleSize) + \"px\"\n    );\n    const rotation = rotation_transform.toString(2).padStart(3, \"0\").split(\"\");\n    set_css_var(\n      // --half-rotation\n      \"--hr\",\n      rotation.map((n) => +n / 2 + \"\").join(\" \")\n    );\n    set_css_var(\n      // --rotation\n      \"--r\",\n      rotation.join(\" \")\n    );\n    set_css_var(\n      // --rotation-duration\n      \"--rd\",\n      round(random() * (ROTATION_SPEED_MAX - ROTATION_SPEED_MIN) + ROTATION_SPEED_MIN) + \"ms\"\n    );\n    set_css_var(\n      // --border-radius\n      \"--br\",\n      is_circle ? \"50%\" : 0\n    );\n  }\n  let timer;\n  function scratch() {\n    container.innerHTML = \"\";\n    clearTimeout(timer);\n    particles = create_particles(particleCount, colors);\n    nodes = create_particle_nodes(container, particles, particleClass);\n    for (const [i, node] of object_entries(nodes))\n      confetti_styles(node, particles[+i].degree);\n    timer = setTimeout(() => {\n      if (destroyAfterDone)\n        container.innerHTML = \"\";\n    }, duration);\n  }\n  scratch();\n  return {\n    update(new_options) {\n      const new_particle_count = new_options.particleCount ?? DEFAULT_PARTICLE_COUNT;\n      const new_particle_shape = new_options.particleShape ?? DEFAULT_PARTICLE_SHAPE;\n      const new_particle_size = new_options.particleSize ?? DEFAULT_PARTICLE_SIZE;\n      const new_particle_class = new_options.particleClass ?? DEFAULT_PARTICLE_CLASS;\n      const new_colors = new_options.colors ?? DEFAULT_COLORS;\n      const new_stage_height = new_options.stageHeight ?? DEFAULT_STAGE_HEIGHT;\n      const new_duration = new_options.duration ?? DEFAULT_DURATION;\n      const new_force = new_options.force ?? DEFAULT_FORCE;\n      const new_stage_width = new_options.stageWidth ?? DEFAULT_STAGE_WIDTH;\n      const new_destroy_after_done = new_options.destroyAfterDone ?? DEFAULT_DESTROY_AFTER_DONE;\n      particles = create_particles(new_particle_count, new_colors);\n      let start_from_scratch = false;\n      if (new_particle_count === particleCount) {\n        nodes = Array.from(container.querySelectorAll(`.${p}`));\n        for (const [i, { color }] of object_entries(particles)) {\n          const node = nodes[+i];\n          if (JSON.stringify(colors) !== JSON.stringify(new_colors)) {\n            node.style.setProperty(\"--bgc\", color);\n          }\n          if (new_particle_shape !== particleShape) {\n            node.style.setProperty(\n              // --border-radius\n              \"--br\",\n              get_is_circle(new_particle_shape, calc_rotation_transform()) ? \"50%\" : \"0\"\n            );\n          }\n          if (new_particle_class !== particleClass) {\n            if (particleClass)\n              node.classList.remove(particleClass);\n            if (new_particle_class)\n              node.classList.add(new_particle_class);\n          }\n        }\n      } else {\n        start_from_scratch = true;\n      }\n      if (destroyAfterDone && !new_destroy_after_done) {\n        clearTimeout(timer);\n      }\n      container.style.setProperty(\"--sh\", new_stage_height + \"px\");\n      duration = new_duration;\n      colors = new_colors;\n      force = new_force;\n      particleCount = new_particle_count;\n      particleShape = new_particle_shape;\n      particleSize = new_particle_size;\n      particleClass = new_particle_class;\n      destroyAfterDone = new_destroy_after_done;\n      stageHeight = new_stage_height;\n      stageWidth = new_stage_width;\n      if (start_from_scratch)\n        scratch();\n    },\n    destroy() {\n      container.innerHTML = \"\";\n      clearTimeout(timer);\n    }\n  };\n}\nfunction append_styles(styles) {\n  if (document.querySelector(`style[data-neoconfetti]`))\n    return;\n  const style = element(\"style\");\n  style.dataset.neoconfetti = \"\";\n  style.textContent = styles;\n  append_child(document.head, style);\n}\nfunction create_particle_nodes(container, particles = [], particleClass) {\n  const particle_nodes = [];\n  for (const { color } of particles) {\n    const particle_node = element(\"div\");\n    particle_node.className = `${p} ${particleClass}`;\n    particle_node.style.setProperty(\"--bgc\", color);\n    const inner_particle = element(\"div\");\n    append_child(particle_node, inner_particle);\n    append_child(container, particle_node);\n    particle_nodes.push(particle_node);\n  }\n  return particle_nodes;\n}\nvar ROTATION_SPEED_MIN = 200;\nvar ROTATION_SPEED_MAX = 800;\nvar CRAZY_PARTICLES_FREQUENCY = 0.1;\nvar CRAZY_PARTICLE_CRAZINESS = 0.3;\nvar BEZIER_MEDIAN = 0.5;\nvar abs = Math.abs;\nvar random = Math.random;\nvar math_round = Math.round;\nvar max = Math.max;\nvar element = (name) => document.createElement(name);\nvar append_child = (parent, child) => parent.appendChild(child);\nvar create_particles = (count, colors) => Array.from({ length: count }, (_, i) => ({\n  color: colors[i % colors.length],\n  degree: i * 360 / count\n}));\nvar round = (num, precision = 2) => math_round((num + Number.EPSILON) * 10 ** precision) / 10 ** precision;\nvar map_range = (value, x1, y1, x2, y2) => (value - x1) * (y2 - x2) / (y1 - x1) + x2;\nvar rotate = (degree, amount) => degree + amount > 360 ? degree + amount - 360 : degree + amount;\nvar coin_flip = () => random() > 0.5;\nvar object_entries = Object.entries;\nvar POSSIBLE_ROTATION_TRANSFORMS = 6;\nvar should_be_circle = (rotation_transform) => rotation_transform !== 1 && coin_flip();\n\nexport { confetti };\n"],
  "mappings": "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",
  "names": []
}
